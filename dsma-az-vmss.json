{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmSku": {
      "type": "string",
      "defaultValue": "Standard_A1_v2",
      "metadata": {
        "description": "Size of VMs in the VM Scale Set."
      }
    },
    "vmssName": {
      "type": "string",
      "defaultValue": "dsmaz",
      "metadata": {
        "description": "String used as a base for naming resources. Must be 3-57 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
      },
      "maxLength": 57
    },
    "instanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances (1000 or less) hosting DSMA."
      },
      "minValue": 3,
      "maxValue": 1000
    },
    "appGwQty": {
      "type": "int",
      "metadata": {
        "description": "Number of App Gateway instances (1 ~ 32)."
      },
      "defaultValue": 5,
      "minValue": 1,
      "maxValue": 32
    },
    "appGwSize": {
      "type": "string",
      "metadata": {
        "description": "App Gateway SKU size (Small, Medium, Large)"
      },
      "defaultValue": "Medium"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Default location"
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
      }
    },
    "deployScriptName": {
      "type": "string",
      "metadata": {
        "description": "the file name of the script configuring the VMs in the scale set"
      },
      "defaultValue": "deploy-dsma.sh"
    },
    "dsmaInstaller": {
      "type": "string",
      "metadata": {
        "description": "Fortanix DSM installation package URI"
      }
    },
    "dsmEndpoint": {
      "type": "string",
      "metadata": {
        "description": "Fortanix DSM endpoint to which DSM connects when initialized"
      },
      "defaultValue": "https://smartkey.io"
    },
    "dsmaPort": {
      "type": "int",
      "metadata": {
        "description": "Port number to run DSMA"
      },
      "defaultValue": 80
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/arvin-dt/dsma-ubuntu-vmss-app-gateway/main/"
    },
    "resourceTags": {
      "type": "object",
      "defaultValue": {
        "FX_PURPOSE": "PSA-1150",
        "FX_USER": "Arvind"
      }
    }
  },
  "variables": {
    "namingInfix": "[toLower(replace(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9), '-', ''))]",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.8.0/21",
    "virtualNetworkName": "[concat(variables('namingInfix'), '-vnet')]",
    "subnetName": "[concat(variables('namingInfix'), '-subnet')]",
    "nicName": "[concat(variables('namingInfix'), '-nic')]",
    "ipConfigName": "[concat(variables('namingInfix'), '-ipconfig')]",
    "nsgName": "[concat(variables('namingInfix'), '-nsg')]",
    "imageReference": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "16.04-LTS",
      "version": "latest"
    },
    "appGwPublicIPAddressName": "[concat(variables('namingInfix'), '-appGwPip')]",
    "appGwName": "[concat(variables('namingInfix'), '-appGw')]",
    "appGwPublicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('appGwPublicIPAddressName'))]",
    "appGwSubnetName": "[concat(variables('namingInfix'), '-appGwSubnet')]",
    "appGwSubnetPrefix": "10.0.1.0/24",
    "appGwSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('appGwSubnetName'))]",
    "appGwFrontendPort": 80,
    "appGwBackendPort": "[parameters('dsmaPort')]",
    "appGwBePoolName": "[concat(variables('namingInfix'), '-appGwBepool')]",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    },
    "httpProbeName": "httpProbe",
    "httpsProbeName": "httpsProbe"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-02-01",
      "name": "[variables('nsgName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "HTTP",
            "properties": {
              "priority": 1100,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "[variables('appGwBackendPort')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "apiVersion": "2020-08-01",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
              }
            }
          },
          {
            "name": "[variables('appGwSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('appGwSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('appGwPublicIPAddressName')]",
      "location": "[parameters('location')]",
      "apiVersion": "2017-04-01",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/applicationGateways",
      "name": "[variables('appGwName')]",
      "location": "[parameters('location')]",
      "apiVersion": "2017-04-01",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('appGwPublicIPAddressName'))]"
      ],
      "properties": {
        "sku": {
          "name": "[concat('Standard_', parameters('appGwSize'))]",
          "tier": "Standard",
          "capacity": "[parameters('appGwQty')]"
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGwIpConfig",
            "properties": {
              "subnet": {
                "id": "[variables('appGwSubnetID')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGwFrontendIP",
            "properties": {
              "PublicIPAddress": {
                "id": "[variables('appGwPublicIPAddressID')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "appGwFrontendPort",
            "properties": {
              "Port": "[variables('appGwFrontendPort')]"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('appGwBePoolName')]"
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGwBackendHttpSettings",
            "properties": {
              "Port": "[variables('appGwBackendPort')]",
              "Protocol": "Http",
              "CookieBasedAffinity": "Disabled"
            }
          }
        ],
        "httpListeners": [
          {
            "name": "appGwHttpListener",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations/',variables('appGwName'), 'appGwFrontendIP')]"
              },
              "FrontendPort": {
                "Id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts/',variables('appGwName'), 'appGwFrontendPort')]"
              },
              "Protocol": "Http"
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "rule1",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners/',variables('appGwName'), 'appGwHttpListener')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools/',variables('appGwName'), variables('appGwBePoolName'))]"
              },
              "backendHttpSettings": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection/',variables('appGwName'),'appGwBackendHttpSettings')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[concat(variables('namingInfix'), '-vmss')]",
      "location": "[parameters('location')]",
      "apiVersion": "2017-03-30",
      "tags": "[parameters('resourceTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/applicationGateways/', variables('appGwName'))]"
      ],
      "sku": {
        "name": "[parameters('vmSku')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": "true",
        "singlePlacementGroup": "false",
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage"
            },
            "imageReference": "[variables('imageReference')]"
          },
          "osProfile": {
            "computerNamePrefix": "[variables('namingInfix')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPasswordOrKey')]",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName')]",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('virtualNetworkName'), variables('subnetName'))]"
                        },
                        "ApplicationGatewayBackendAddressPools": [
                          {
                            "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools/', variables('appGwName'), variables('appGwBePoolName'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "deploy-dsma-extension",
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0",
                  "autoUpgradeMinorVersion": false,
                  "settings": {
                    "fileUris": [
                      "[concat(parameters('_artifactsLocation'), '/', parameters('deployScriptName'))]"
                    ],
                    "commandToExecute": "[concat('bash ', parameters('deployScriptName'), ' ', parameters('dsmaPort'), ' ', parameters('dsmEndpoint'), ' ', parameters('dsmaInstaller'))]"
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "outputs": {
    "fqdn": {
      "type": "string",
      "value": "[reference( variables('appGwPublicIPAddressID') ).dnsSettings.fqdn]"
    }
  }
}
